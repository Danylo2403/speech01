{"mappings":"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","sources":["src/weather.js","src/news.js","src/tasks.js","src/utils.js","src/storage.js","src/index.js"],"sourcesContent":["export async function fetchWeather(city) {\n//\n//\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.cod === 200) {\n      return {\n        name: data.name,\n        description: data.weather[0].description,\n        temp: data.main.temp,\n      };\n    } else {\n      console.error(data.message);\n      return null;\n    }\n  } catch (error) {\n    console.error('Ошибка получения данных:', error);\n    return null;\n  }\n}\n","export async function getNews() {\n//\n//\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.status === 'ok') {\n      return data.articles.slice(0, 5).map((article) => ({\n        title: article.title,\n        description: article.description,\n      }));\n    } else {\n      console.error(data.message);\n      return null;\n    }\n  } catch (error) {\n    console.error('Ошибка получения новостей:', error);\n    return null;\n  }\n}\n","let reminders = [];\n\nexport function addReminder(reminder) {\n  reminders.push({\n    text: reminder,\n    time: Date.now() + 60000, // Через 1 минуту\n  });\n  checkReminders();\n}\n\nexport function checkReminders() {\n  setInterval(() => {\n    const now = Date.now();\n    reminders = reminders.filter((reminder) => {\n      if (reminder.time <= now) {\n        alert(`Напоминание: ${reminder.text}`);\n        return false;\n      }\n      return true;\n    });\n  }, 1000); // Проверяем каждую секунду\n}\n","export function speak(text) {\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.lang = 'ru-RU';\n  synth.speak(utterance);\n}\n\nexport function setLanguage(recognition, lang) {\n  recognition.lang = lang;\n  speak(`Язык изменён на ${lang === 'en-US' ? 'английский' : 'русский'}.`);\n}\n","export function logCommand(command) {\n  const commands = JSON.parse(localStorage.getItem('commands')) || [];\n  commands.push({ command, timestamp: new Date() });\n  localStorage.setItem('commands', JSON.stringify(commands));\n}\n\nexport function getCommandHistory() {\n  return JSON.parse(localStorage.getItem('commands')) || [];\n}\n","import { fetchWeather } from './weather.js';\nimport { getNews } from './news.js';\nimport { addReminder, checkReminders } from './tasks.js';\nimport { speak, setLanguage } from './utils.js';\nimport { logCommand, getCommandHistory } from './storage.js';\n\n// Проверка поддержки Web Speech API\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\nif (SpeechRecognition) {\n  const recognition = new SpeechRecognition();\n  recognition.lang = 'ru-RU';\n  recognition.interimResults = false;\n\n  const startBtn = document.getElementById('start-btn');\n  const output = document.getElementById('output');\n  const infoContainer = document.getElementById('info-container');\n\n  startBtn.addEventListener('click', () => {\n    recognition.start();\n    startBtn.classList.add('listening');\n    output.textContent = 'Слушаю вас...';\n  });\n\n  recognition.addEventListener('result', async (event) => {\n    const speech = event.results[0][0].transcript.toLowerCase();\n    output.textContent = `Вы сказали: \"${speech}\"`;\n    startBtn.classList.remove('listening');\n    logCommand(speech); // Логируем команду\n\n    if (speech.includes('привет')) {\n      speak('Привет! Как я могу помочь?');\n    } else if (speech.includes('как тебя зовут')) {\n      speak('Меня зовут Джарвис, ваш голосовой помощник.');\n    } else if (speech.includes('сколько время')) {\n      const now = new Date();\n      const time = now.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\n      speak(`Сейчас ${time}`);\n    } else if (speech.includes('погода')) {\n      const city = speech.split('погода в ')[1] || 'Киев';\n      const weatherData = await fetchWeather(city);\n      if (weatherData) {\n        const { name, description, temp } = weatherData;\n        speak(`В городе ${name} сейчас ${description}, температура ${temp} градусов.`);\n        infoContainer.innerHTML = `<div class=\"card\">\n          <h3>Погода в ${name}</h3>\n          <p>${description}, ${temp} °C</p>\n        </div>`;\n      } else {\n        speak('Не удалось получить данные о погоде.');\n      }\n    } else if (speech.includes('напомни')) {\n      const reminder = speech.replace('напомни', '').trim();\n      addReminder(reminder);\n      speak(`Я напомню вам: ${reminder}`);\n    } else if (speech.includes('новости')) {\n  const news = await getNews();\n  if (news && news.length > 0) {\n    speak('Вот последние новости.');\n    for (let i = 0; i < Math.min(news.length, 3); i++) {\n      const { title, description } = news[i];\n      speak(`Новость ${i + 1}: ${title}. ${description}`);\n    }\n    infoContainer.innerHTML = news.map(\n      (item) => `<div class=\"card\"><h3>${item.title}</h3><p>${item.description}</p></div>`\n    ).join('');\n  } else {\n    speak('Не удалось загрузить новости.');\n  }\n} else if (speech.includes('измени язык на английский')) {\n      setLanguage(recognition, 'en-US');\n    } else {\n      speak('Извините, я не знаю такой команды.');\n    }\n  });\n\n  recognition.addEventListener('end', () => {\n    startBtn.classList.remove('listening');\n  });\n} else {\n  alert('Ваш браузер не поддерживает Web Speech API.');\n}\n"],"names":["async","$7db59f3fe2689fbe$export$7a954b5c9a93cc61","city","response","fetch","url","data","json","cod","name","description","weather","temp","main","console","error","message","$b6922d8a54e73e1b$export$e736a0e2de0cb508","status","articles","slice","map","article","title","$652abe295f818395$var$reminders","$652abe295f818395$export$47c82bb71513a20e","reminder","push","text","time","Date","now","setInterval","filter","alert","$6531107febf5e71a$export$e62e8864abfee904","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","speak","$6531107febf5e71a$export$4b6bf64406ec64af","recognition","$3ba18441c3474097$export$3bb886c4c1352118","command","commands","JSON","parse","localStorage","getItem","timestamp","setItem","stringify","$1f0dc3b9307be026$var$SpeechRecognition","SpeechRecognition","webkitSpeechRecognition","interimResults","startBtn","document","getElementById","output","infoContainer","addEventListener","start","classList","add","textContent","event","speech","results","transcript","toLowerCase","remove","includes","toLocaleTimeString","hour","minute","split","weatherData","innerHTML","replace","trim","news","length","i","Math","min","item","join"],"version":3,"file":"index.f05835c6.js.map"}