{"mappings":"AAAOA,eAAeC,EAAaC,GACjC,MACMC,EAAM,qDAAqDD,gEAEjE,IACE,MAAME,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAC5B,OAAiB,MAAbD,EAAKE,IACA,CACLC,KAAMH,EAAKG,KACXC,YAAaJ,EAAKK,QAAQ,GAAGD,YAC7BE,KAAMN,EAAKO,KAAKD,OAGlBE,QAAQC,MAAMT,EAAKU,SACZ,K,CAET,MAAOD,GAEP,OADAD,QAAQC,MAAM,2BAA4BA,GACnC,I,ECnBJ,SAASE,EAAMC,GACpB,MAAMC,EAAQC,OAAOC,gBACfC,EAAY,IAAIC,yBAAyBL,GAC/CI,EAAUE,KAAO,QACjBL,EAAMM,MAAMH,E,CCAG,MAAXI,EAAoBN,OAAOO,mBAAqBP,OAAOQ,wBAE7D,GAAIF,EAAmB,CACrB,MAAMG,EAAc,IAAIH,EACxBG,EAAYL,KAAO,QACnBK,EAAYC,gBAAiB,EAE7B,MAAMC,EAAWC,SAASC,eAAe,aACnCC,EAASF,SAASC,eAAe,UAEvCF,EAASI,iBAAiB,SAAS,KACjCN,EAAYO,QACZF,EAAOG,YAAc,eAAe,IAGtCR,EAAYM,iBAAiB,UAAUnC,MAAOsC,IAC5C,MAAMC,EAASD,EAAME,QAAQ,GAAG,GAAGC,WAAWC,cAGrC,GAFTR,EAAOG,YAAc,gBAACE,KAElBA,EAAOI,SAAS,UAClB1B,EAAM,mCACmB,GAAhBsB,EAAOI,SAAS,kBACzB1B,EAAM,oDACmC,GAAhCsB,EAAOI,SAAS,iBAA8B,CAGvD1B,EAAM,WAFM,IAAI2B,MACCC,mBAAmB,QAAS,CAAEC,KAAM,UAAWC,OAAQ,c,MAEnE,GAAIR,EAAOI,SAAS,UAAiB,CACpC,MAAAzC,EAAOqC,EAAOS,MAAM,aAAoB,IAAM,SAC9CC,QAAoBhD,EAAaC,GACvC,GAAI+C,EAAa,CACf,MAAMxC,KAAEA,EAAIC,YAAEA,EAAWE,KAAEA,GAASqC,EACpChC,EAAM,YAACR,YAAuBC,kBAA4BE,c,MAE1DK,EAAM,uC,MAGRA,EAAM,qCAAgE,IAI1EY,EAAYM,iBAAiB,OAAO,KAClCD,EAAOG,aAAe,WAAW,G,MAGnCa,MAAM","sources":["src/weather.js","src/utils.js","src/index.js"],"sourcesContent":["export async function fetchWeather(city) {\n  const apiKey = '94f87b5642d293df0fe0ec7fd68ef3f4'; // Замени на свой API-ключ\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&lang=ru&units=metric`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.cod === 200) {\n      return {\n        name: data.name,\n        description: data.weather[0].description,\n        temp: data.main.temp,\n      };\n    } else {\n      console.error(data.message);\n      return null;\n    }\n  } catch (error) {\n    console.error('Ошибка получения данных:', error);\n    return null;\n  }\n}\n","export function speak(text) {\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.lang = 'ru-RU';\n  synth.speak(utterance);\n}\n","import { fetchWeather } from './weather.js';\nimport { speak } from './utils.js';\n\n// Проверка поддержки Web Speech API\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\nif (SpeechRecognition) {\n  const recognition = new SpeechRecognition();\n  recognition.lang = 'ru-RU';\n  recognition.interimResults = false;\n\n  const startBtn = document.getElementById('start-btn');\n  const output = document.getElementById('output');\n\n  startBtn.addEventListener('click', () => {\n    recognition.start();\n    output.textContent = 'Слушаю вас...';\n  });\n\n  recognition.addEventListener('result', async (event) => {\n    const speech = event.results[0][0].transcript.toLowerCase();\n    output.textContent = `Вы сказали: \"${speech}\"`;\n\n    if (speech.includes('привет')) {\n      speak('Привет! Как я могу помочь?');\n    } else if (speech.includes('как тебя зовут')) {\n      speak('Меня зовут Джарвис, ваш голосовой помощник.');\n    } else if (speech.includes('сколько время')) {\n      const now = new Date();\n      const time = now.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\n      speak(`Сейчас ${time}`);\n    } else if (speech.includes('погода')) {\n      const city = speech.split('погода в ')[1] || 'Москва';\n      const weatherData = await fetchWeather(city);\n      if (weatherData) {\n        const { name, description, temp } = weatherData;\n        speak(`В городе ${name} сейчас ${description}, температура ${temp} градусов.`);\n      } else {\n        speak('Не удалось получить данные о погоде.');\n      }\n    } else {\n      speak('Извините, я не знаю такой команды.');\n    }\n  });\n\n  recognition.addEventListener('end', () => {\n    output.textContent += ' (Готово)';\n  });\n} else {\n  alert('Ваш браузер не поддерживает Web Speech API.');\n}\n"],"names":["async","$7db59f3fe2689fbe$export$7a954b5c9a93cc61","city","url","response","fetch","data","json","cod","name","description","weather","temp","main","console","error","message","$6531107febf5e71a$export$e62e8864abfee904","text","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","speak","$1f0dc3b9307be026$var$SpeechRecognition","SpeechRecognition","webkitSpeechRecognition","recognition","interimResults","startBtn","document","getElementById","output","addEventListener","start","textContent","event","speech","results","transcript","toLowerCase","includes","Date","toLocaleTimeString","hour","minute","split","weatherData","alert"],"version":3,"file":"index.ad86ee55.js.map"}